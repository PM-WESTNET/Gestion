<?php

use yii\db\Migration;

/**
 * Class m190404_192842_installation_status_schema
 */
class m190404_192842_installation_status_schema extends Migration
{

    public function init()
    {
        $this->db = 'dbticket';
        parent::init(); // TODO: Change the autogenerated stub
    }

    /**
     * {@inheritdoc}
     */
    public function safeUp()
    {
        $this->insert('schema', [
            'name' => 'Instalaciones Realizadas',
            'class' => 'app\modules\ticket\components\schemas\SchemaInstalaciones'
        ]);

        $schema_id = $this->db->getLastInsertID();

        $this->insert('status', [
            'name' => 'Baja',
            'description' => 'Instalación dada de baja',
            'is_open' => 0,
            'generate_action' => 0
        ]);

        $status_id = $this->db->getLastInsertID();

        $this->insert('schema_has_status', [
            'schema_id' => $schema_id,
            'status_id' => $status_id
        ]);

        $this->insert('status', [
            'name' => 'Llamar',
            'description' => 'Llamado al cliente recien instalado',
            'is_open' => 1,
            'generate_action' => 0
        ]);

        $status_id = $this->db->getLastInsertID();

        $this->insert('schema_has_status', [
            'schema_id' => $schema_id,
            'status_id' => $status_id
        ]);

        $this->insert('status', [
            'name' => 'Compromiso de Pago',
            'description' => 'A la espera del Pago del cliente',
            'is_open' => 1,
            'generate_action' => 1
        ]);

        $status_id = $this->db->getLastInsertID();

        $this->insert('schema_has_status', [
            'schema_id' => $schema_id,
            'status_id' => $status_id
        ]);

        $this->insert('action', [
           'name' => 'Crear Evento para verificar pago',
           'slug' => 'crear-evento-para-verificar-pago',
            'type' => 'event'
        ]);

        $action = $this->db->getLastInsertID();

        $this->insert('status_has_action', [
            'status_id' => $status_id,
            'action_id' => $action,
            'text_1' => 'Cliente tiene un compromiso de pago',
            'task_category_id' => 1,
            'task_type_id' => 2,
            'task_status_id' => 1,
            'task_priority' => 2,
            'task_time' => '09:00',
        ]);

        $this->insert('status', [
            'name' => 'Pagó',
            'description' => 'Pago realizado',
            'is_open' => 0,
            'generate_action' => 0
        ]);

        $status_id = $this->db->getLastInsertID();

        $this->insert('schema_has_status', [
            'schema_id' => $schema_id,
            'status_id' => $status_id
        ]);

        $this->insert('status', [
            'name' => 'Pasado al Vendedor',
            'description' => 'Se le notifica al vendedor',
            'is_open' => 1,
            'generate_action' => 0
        ]);

        $status_id = $this->db->getLastInsertID();

        $this->insert('schema_has_status', [
            'schema_id' => $schema_id,
            'status_id' => $status_id
        ]);

        $this->insert('status', [
            'name' => 'Problemas Técnicos',
            'description' => 'Problemas Técnicos',
            'is_open' => 1,
            'generate_action' => 0
        ]);

        $status_id = $this->db->getLastInsertID();

        $this->insert('schema_has_status', [
            'schema_id' => $schema_id,
            'status_id' => $status_id
        ]);
    }

    /**
     * {@inheritdoc}
     */
    public function safeDown()
    {

    }

    /*
    // Use up()/down() to run migration code without a transaction.
    public function up()
    {

    }

    public function down()
    {
        echo "m190404_192842_installation_status_schema cannot be reverted.\n";

        return false;
    }
    */
}
