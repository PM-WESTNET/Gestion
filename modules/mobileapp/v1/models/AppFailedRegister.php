<?php

namespace app\modules\mobileapp\v1\models;

use app\modules\ticket\models\Category;
use app\modules\ticket\models\Schema;
use app\modules\ticket\models\Ticket;
use Yii;

/**
 * This is the model class for table "app_failed_register".
 *
 * @property integer $app_failed_register_id
 * @property string $name
 * @property string $lastname
 * @property string $document_type
 * @property string $document_number
 * @property integer $customer_code
 * @property string $email
 * @property string $phone
 * @property string $status
 */
class AppFailedRegister extends \app\components\db\ActiveRecord
{

    const TYPE_REGISTER = 'register';
    const TYPE_CONTACT = 'contact';

    /**
     * @inheritdoc
     */
    public static function tableName()
    {
        return 'app_failed_register';
    }
    
    /**
     * @inheritdoc
     */
    /*
    public function behaviors()
    {
        return [
            'timestamp' => [
                'class' => 'yii\behaviors\TimestampBehavior',
                'attributes' => [
                    yii\db\ActiveRecord::EVENT_BEFORE_INSERT => ['timestamp'],
                ],
            ],
            'date' => [
                'class' => 'yii\behaviors\TimestampBehavior',
                'attributes' => [
                    yii\db\ActiveRecord::EVENT_BEFORE_INSERT => ['date'],
                ],
                'value' => function(){return date('Y-m-d');},
            ],
            'time' => [
                'class' => 'yii\behaviors\TimestampBehavior',
                'attributes' => [
                    yii\db\ActiveRecord::EVENT_BEFORE_INSERT => ['time'],
                ],
                'value' => function(){return date('h:i');},
            ],
        ];
    }
    */

    /**
     * @inheritdoc
     */
    public function rules()
    {
        return [
            [['name', 'phone', 'type'], 'required'],
            [['status', 'text'], 'string'],
            [['customer_code'], 'integer'],
            [['name', 'document_type', 'document_number', 'phone'], 'string', 'max' => 45],
            [['email'], 'string', 'max' => 255]
        ];
    }

    /**
     * @inheritdoc
     */
    public function attributeLabels()
    {
        return [
            'app_failed_register_id' => Yii::t('app', 'App Failed Register ID'),
            'name' => Yii::t('app', 'Name'),
            'document_type' => Yii::t('app', 'Document Type'),
            'document_number' => Yii::t('app', 'Document Number'),
            'email' => Yii::t('app', 'Email'),
            'phone' => Yii::t('app', 'Phone'),
            'status' => Yii::t('app', 'Status'),
            'fullName' => Yii::t('app', 'Name'),
            'type' => Yii::t('app', 'Type'),
            'text' => Yii::t('app','Text'),
            'customer_code' => Yii::t('app', 'Customer code'),
        ];
    }    

     
    /**
     * @inheritdoc
     * Strong relations: None.
     */
    public function getDeletable()
    {
        return true;
    }
    
    /**
     * @brief Deletes weak relations for this model on delete
     * Weak relations: None.
     */
    protected function unlinkWeakRelations(){
    }
    
    /**
     * @inheritdoc
     */
    public function beforeDelete()
    {
        if (parent::beforeDelete()) {
            if($this->getDeletable()){
                $this->unlinkWeakRelations();
                return true;
            }
        } else {
            return false;
        }
    }

    public function beforeSave($insert)
    {
        if ($insert){
            $this->status = 'pending';
        }

        return parent::beforeSave($insert); // TODO: Change the autogenerated stub
    }

    /**
     * @return string
     * Devuelve el nombre completo concatenando el apellido y el nombre.
     */
    public function getFullName(){
        return $this->name;
    }

    /**
     * @return array
     * Devuelve los tipos para ser listados en un desplegable
     */
    public static function getTypesForSelect()
    {
        return [
            self::TYPE_REGISTER => Yii::t('app', self::TYPE_REGISTER),
            self::TYPE_CONTACT => Yii::t('app', self::TYPE_CONTACT)
        ];
    }

    public function afterSave($insert, $changedAttributes)
    {
        parent::afterSave($insert, $changedAttributes); // TODO: Change the autogenerated stub

        if ($insert) {

            $customer = \app\modules\sale\models\Customer::findOne(['code' => $this->customer_code]);

            if ($customer) {
                $category = Category::findOne(['slug' => 'edicion-de-datos']);

                if ($category) {

                    $schema = Schema::findOne(['class' => 'app\modules\ticket\components\schemas\SchemaEdition']);

                    $status_id = ($schema ? $schema->statuses[0]->status_id : null);

                    $ticket= new Ticket();
                    $ticket->title = 'Solicitud de Edición de Datos';
                    $ticket->content = 'El cliente '. $customer->getFullName(). ' solicitó contacto para edición de Datos';
                    $ticket->customer_id = $customer->customer_id;
                    $ticket->category_id = $category->category_id;
                    $ticket->status_id = $status_id;
                    $ticket->userModelId = 1;

                    if ($ticket->save()) {
                        Ticket::assignTicketToUser($ticket->ticket_id, $category->responsible_user_id);
                        $this->updateAttributes(['ticket_id' => $ticket->ticket_id]);
                    }

                    Yii::info($ticket->getErrors());

                }
            }
        }
    }

}
