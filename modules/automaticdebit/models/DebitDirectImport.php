<?php

namespace app\modules\automaticdebit\models;

use app\modules\accounting\models\MoneyBoxAccount;
use app\modules\checkout\models\Payment;
use app\modules\sale\models\Company;
use Yii;
use yii\behaviors\TimestampBehavior;
use yii\db\ActiveRecord;
use yii\db\Exception;
use yii\web\UploadedFile;

/**
 * This is the model class for table "debit_direct_import".
 *
 * @property int $debit_direct_import_id
 * @property string $file
 * @property int $import_timestamp
 * @property int $process_timestamp
 * @property int $status
 * @property int $company_id
 * @property int $bank_id
 * @property int $money_box_account_id
 * @property int $create_timestamp
 *
 * @property Bank $bank
 * @property Company $company
 * @property MoneyBoxAccount moneyBoxAccount
 * @property DebitDirectImportHasPayment[] $debitDirectImportHasPayments
 */
class DebitDirectImport extends \yii\db\ActiveRecord
{
    const DRAFT_STATUS = 1;
    const SUCCESS_STATUS = 10;

    public $fileUploaded;
    /**
     * {@inheritdoc}
     */
    public static function tableName()
    {
        return 'debit_direct_import';
    }


    public function behaviors()
    {
        return array_merge(parent::behaviors(),  [
            'timestamp' => [
                'class' => TimestampBehavior::class,
                'attributes' => [
                    ActiveRecord::EVENT_BEFORE_INSERT => ['create_timestamp']
                ],
                'createdAtAttribute' => 'create_timestamp'
            ]
        ]); // TODO: Change the autogenerated stub
    }

    /**
     * {@inheritdoc}
     */
    public function rules()
    {
        return [
            [['import_timestamp', 'process_timestamp', 'status', 'company_id', 'bank_id', 'money_box_account_id', 'create_timestamp'], 'integer'],
            [['company_id', 'bank_id', 'money_box_account_id',], 'required'],
            [['file'], 'string', 'max' => 255],
            [['fileUploaded'], 'file', 'extensions' => 'txt'],
            [['bank_id'], 'exist', 'skipOnError' => true, 'targetClass' => Bank::class, 'targetAttribute' => ['bank_id' => 'bank_id']],
            [['company_id'], 'exist', 'skipOnError' => true, 'targetClass' => Company::class, 'targetAttribute' => ['company_id' => 'company_id']],
            [['money_box_account_id'], 'exist', 'skipOnError' => true, 'targetClass' => MoneyBoxAccount::class, 'targetAttribute' => ['money_box_account_id' => 'money_box_account_id']],
        ];
    }

    /**
     * {@inheritdoc}
     */
    public function attributeLabels()
    {
        return [
            'debit_direct_import_id' => Yii::t('app', 'Debit Direct Import ID'),
            'file' => Yii::t('app', 'File'),
            'import_timestamp' => Yii::t('app', 'Import Timestamp'),
            'process_timestamp' => Yii::t('app', 'Process Timestamp'),
            'status' => Yii::t('app', 'Status'),
            'company_id' => Yii::t('app', 'Company ID'),
            'bank_id' => Yii::t('app', 'Bank ID'),
        ];
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getBank()
    {
        return $this->hasOne(Bank::className(), ['bank_id' => 'bank_id']);
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getCompany()
    {
        return $this->hasOne(Company::className(), ['company_id' => 'company_id']);
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getDebitDirectImportHasPayments()
    {
        return $this->hasMany(DebitDirectImportHasPayment::className(), ['debit_direct_import_id' => 'debit_direct_import_id']);
    }

    public function getPayments()
    {
        return $this->hasMany(Payment::class, ['payment_id' => 'payment_id'])->viaTable('debit_direct_import_has_payment', ['debit_direct_import_id' => 'debit_direct_import_id']);
    }

    public function import() {

        $bank_instance = $this->bank->getBankInstance();
        $file = UploadedFile::getInstance($this, 'fileUploaded');

        if (empty($file)) {
            $this->addError('fileUploaded', Yii::t('app','You must select a file'));
        }


        $fileName = Yii::getAlias('@app/web').'/direct_debit_import/'.$file->baseName.'.'.$file->extension;
        $file->saveAs($fileName);

        $resource = fopen($fileName, 'r');

        if ($resource === false){
            return false;
        }

        try {
            $bank_instance->import($resource, $this);
            return true;
        }catch (\Exception $ex) {
            Yii::$app->session->addFlash('error', $ex->getMessage());
            return false;
        }
    }
}
