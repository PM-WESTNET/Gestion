<?php

use yii\db\Migration;

/**
 * Class m190607_204400_app_contact_ticket_category
 */
class m190607_204400_app_contact_ticket_category extends Migration
{

    public function init()
    {
        $this->db = 'dbticket';
        parent::init(); // TODO: Change the autogenerated stub
    }

    /**
     * {@inheritdoc}
     */
    public function safeUp()
    {
         $this->insert('schema', [
            'name' => 'Edición de Datos',
            'class' => 'app\modules\ticket\components\schemas\SchemaEdition',
        ]);

        $schema_id = $this->db->getLastInsertID();

        $this->insert('status', [
            'name' => 'Nuevo',
            'description' => 'Solicitud de edición de datos pendiente',
            'is_open' => 0,
            'generate_action' => 0
        ]);

        $status_id = $this->db->getLastInsertID();

        $this->insert('schema_has_status', [
            'schema_id' => $schema_id,
            'status_id' => $status_id
        ]);

        $this->insert('status', [
            'name' => 'En curso',
            'description' => 'Solicitud de edición de datos en curso',
            'is_open' => 1,
            'generate_action' => 0
        ]);

        $status_id = $this->db->getLastInsertID();

        $this->insert('schema_has_status', [
            'schema_id' => $schema_id,
            'status_id' => $status_id
        ]);

        $this->insert('status', [
            'name' => 'Cerrado (con éxito)',
            'description' => 'Solicitud de edición de datos realizada con éxito',
            'is_open' => 0,
            'generate_action' => 0
        ]);

        $status_id = $this->db->getLastInsertID();

        $this->insert('schema_has_status', [
            'schema_id' => $schema_id,
            'status_id' => $status_id
        ]);

        $this->insert('status', [
            'name' => 'Cerrado (sin éxito)',
            'description' => 'Solicitud de edición de datos no se pudo realizar',
            'is_open' => 0,
            'generate_action' => 0
        ]);

        $status_id = $this->db->getLastInsertID();

        $this->insert('schema_has_status', [
            'schema_id' => $schema_id,
            'status_id' => $status_id
        ]);


        $administracion_category = $this->db->createCommand("SELECT category_id, parent_id, lft, rgt FROM category where slug = 'Administración'")->queryOne();

        if (!empty($administracion_category)){
            $lastchildresult= $this->db->createCommand("SELECT * from category where parent_id = ':parent' ORDER BY category_id DESC", ['parent' => $administracion_category['category_id']])->queryOne();

            if (!empty($lastchildresult)) {
                $rgt = $lastchildresult['rgt'];
            }else {
                $rgt = $administracion_category['lft'];
            }

            $this->db->createCommand('UPDATE category SET rgt = rgt+2 WHERE rgt > ' . $rgt)->execute();
            $this->db->createCommand('UPDATE category SET lft = lft+2 WHERE lft > ' . $rgt)->execute();

            $this->insert('category', [
                'name' => 'Solicitud de Edición de Datos',
                'description' => 'Ticket de Solicitud de Edición de Datos',
                'parent_id' => $administracion_category['category_id'],
                'notify' => 0,
                'slug' => 'edicion-de-datos',
                'lft' => $rgt + 1,
                'rgt' => $rgt + 2,
                'schema' => $schema_id
            ]);

            return true;
        }

        return false;
    }

    /**
     * {@inheritdoc}
     */
    public function safeDown()
    {
        echo "m190607_204400_app_contact_ticket_category cannot be reverted.\n";

        return false;
    }

    /*
    // Use up()/down() to run migration code without a transaction.
    public function up()
    {

    }

    public function down()
    {
        echo "m190607_204400_app_contact_ticket_category cannot be reverted.\n";

        return false;
    }
    */
}
